{"ast":null,"code":"var _jsxFileName = \"/Users/erikasland/Repositories/FehuFund/client/src/components/Form/Form.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport 'react-notifications/lib/notifications.css';\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\nimport './Form.css';\n\nclass Form extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.name = React.createRef();\n    this.email = React.createRef();\n    this.message = React.createRef();\n    this.state = {\n      formError: {\n        name: {\n          hasError: false,\n          error: ''\n        },\n        email: {\n          hasError: false,\n          error: ''\n        },\n        message: {\n          hasError: false,\n          error: ''\n        }\n      }\n    };\n\n    this.toggleFormError = () => {\n      this.setState({\n        formError: {\n          status: !this.state.formError\n        }\n      });\n    };\n\n    this.createNewFormErrorState = validations => {\n      let newFormErrorState = {};\n      Object.keys(validations).map(inputType => {\n        const validationResults = validations[inputType];\n\n        if (validationResults === 'valid') {\n          newFormErrorState[inputType] = {\n            hasError: false,\n            error: ''\n          };\n        } else {\n          newFormErrorState[inputType] = {\n            hasError: true,\n            error: validationResults\n          };\n        }\n      });\n      return newFormErrorState;\n    };\n\n    this.updateFormErrorState = newFormErrorState => {\n      this.setState({\n        formError: newFormErrorState\n      });\n    };\n\n    this.sendEmail = e => {\n      e.preventDefault(); // TODO: validate | name: exists. less than 60 chars. Not javascript. | email: exists. is an email. is less than 100 chars. Not Javascript. | message: less than 5000 chars. exists. is not javascript.\n\n      const emailContents = {\n        name: this.name.current.value,\n        email: this.email.current.value,\n        message: this.message.current.value\n      };\n      const newFormErrorState = this.createNewFormErrorState({\n        name: this.nameValidation(emailContents['name']),\n        email: this.emailValidation(emailContents['email']),\n        message: this.messageValidation(emailContents['message'])\n      });\n      this.updateFormErrorState(newFormErrorState);\n      const emailIsValid = !(newFormErrorState.name.hasError || newFormErrorState.email.hasError || newFormErrorState.message.hasError);\n\n      if (emailIsValid) {\n        // TODO: URL to have placeholder\n        axios.post('http://ec2-18-224-173-234.us-east-2.compute.amazonaws.com:5000/contact/send', emailContents).then(res => {\n          if (res.data.error) {\n            NotificationManager.error('Contact web-admin.', 'Message Not Delivered.');\n          } else {\n            NotificationManager.success(\"We'll reach out to you shortly!\", 'Message delivered!');\n          }\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    };\n\n    this.nameValidation = text => {\n      if (text.length === 0) {\n        return 'Name cannot be empty. Tell us who you are before resending.';\n      } else if (text.length > 100) {\n        return 'Your name needs to be less than 100 characters.';\n      } else {\n        return 'valid';\n      }\n    };\n\n    this.messageValidation = text => {\n      if (text.length === 0) {\n        return 'Message cannot be empty. Share your thoughts before resending.';\n      } else if (text.length > 1000) {\n        return 'Your message needs to be less than 1000 characters.';\n      } else {\n        return 'valid';\n      }\n    };\n\n    this.emailValidation = text => {\n      const isEmail = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i).test(text);\n      return isEmail ? 'valid' : 'Email is not valid. Please enter a valid email.';\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NotificationContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      id: \"form\",\n      className: \"topBefore\",\n      onSubmit: event => {\n        this.sendEmail(event);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputs-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"name\",\n      name: \"name\",\n      type: \"text\",\n      ref: this.name,\n      placeholder: \"NAME\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: !this.state.formError.name.hasError ? \"error-msg close\" : \"error-msg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, this.state.formError.name.error)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputs-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"text\",\n      ref: this.email,\n      placeholder: \"EMAIL\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: !this.state.formError.email.hasError ? \"error-msg close\" : \"error-msg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, this.state.formError.email.error)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"textarea-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      id: \"message\",\n      name: \"message\",\n      type: \"text\",\n      ref: this.message,\n      placeholder: \"SPEAK YOUR MIND...\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: !this.state.formError.message.hasError ? \"error-msg close\" : \"error-msg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 29\n      }\n    }, this.state.formError.message.error)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"submit-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      id: \"submit\",\n      type: \"submit\",\n      value: \"GO!\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"names":["React","axios","NotificationContainer","NotificationManager","Form","Component","name","createRef","email","message","state","formError","hasError","error","toggleFormError","setState","status","createNewFormErrorState","validations","newFormErrorState","Object","keys","map","inputType","validationResults","updateFormErrorState","sendEmail","e","preventDefault","emailContents","current","value","nameValidation","emailValidation","messageValidation","emailIsValid","post","then","res","data","success","catch","err","console","log","text","length","isEmail","RegExp","test","render","event"],"sources":["/Users/erikasland/Repositories/FehuFund/client/src/components/Form/Form.js"],"sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport 'react-notifications/lib/notifications.css';\nimport {NotificationContainer, NotificationManager} from 'react-notifications';\nimport './Form.css';\n\n\n\nclass Form extends React.Component {\n    name = React.createRef();\n    email = React.createRef();\n    message = React.createRef();\n\n    state = {\n        formError: {\n            name: {\n                hasError: false,\n                error: ''\n            },\n            email: {\n                hasError: false,\n                error: ''\n            },\n            message: {\n                hasError: false,\n                error: ''\n            }\n        }\n    }\n\n    toggleFormError = () => {\n        this.setState({\n            formError: {\n                status: !this.state.formError\n            }\n        })\n    }\n\n    createNewFormErrorState = (validations) => {\n        let newFormErrorState = {}\n\n        Object.keys(validations).map((inputType) => {\n            const validationResults = validations[inputType];\n\n            if (validationResults === 'valid') {\n                newFormErrorState[inputType] = {hasError: false, error: ''};\n            } else {\n                newFormErrorState[inputType] = {hasError: true, error: validationResults};\n            }\n        })\n\n        return newFormErrorState;\n    }\n\n    updateFormErrorState = (newFormErrorState) => {\n        this.setState({\n            formError: newFormErrorState\n        })\n    }\n\n    sendEmail = (e) => {\n        e.preventDefault();\n        // TODO: validate | name: exists. less than 60 chars. Not javascript. | email: exists. is an email. is less than 100 chars. Not Javascript. | message: less than 5000 chars. exists. is not javascript.\n\n        const emailContents = {\n            name: this.name.current.value,\n            email: this.email.current.value,\n            message: this.message.current.value\n        };\n\n        const newFormErrorState = this.createNewFormErrorState({\n                                                                name: this.nameValidation(emailContents['name']), \n                                                                email: this.emailValidation(emailContents['email']),\n                                                                message: this.messageValidation(emailContents['message'])\n                                                                });\n\n        this.updateFormErrorState(newFormErrorState);\n        const emailIsValid = !(newFormErrorState.name.hasError || newFormErrorState.email.hasError || newFormErrorState.message.hasError); \n\n\n        if (emailIsValid) {\n            // TODO: URL to have placeholder\n            axios.post('http://ec2-18-224-173-234.us-east-2.compute.amazonaws.com:5000/contact/send', emailContents).then((res) => {\n                if(res.data.error) {\n                    NotificationManager.error('Contact web-admin.', 'Message Not Delivered.');\n                } else {\n                    NotificationManager.success(\"We'll reach out to you shortly!\", 'Message delivered!');\n                }\n            }).catch((err) => {\n                console.log(err);\n            })\n        }\n    }\n    \n                        \n    nameValidation = (text) => {\n        if(text.length === 0) {\n            return 'Name cannot be empty. Tell us who you are before resending.';\n        } else if(text.length > 100) {\n            return 'Your name needs to be less than 100 characters.';\n        } else {\n            return 'valid';\n        }\n    }\n    \n    messageValidation = (text) => {\n        if(text.length === 0) {\n            return 'Message cannot be empty. Share your thoughts before resending.';\n        } else if(text.length > 1000) {\n            return 'Your message needs to be less than 1000 characters.';\n        } else {\n            return 'valid';\n        }\n    }\n    \n    emailValidation = (text) => {\n        const isEmail = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i).test(text);\n        return isEmail ? 'valid' : 'Email is not valid. Please enter a valid email.';\n    }\n    \n    \n    render() {\n        return (\n            <div className=\"form-wrapper\">\n                <NotificationContainer/>\n                <div className=\"form-container\">\n                    <form id=\"form\" className=\"topBefore\" onSubmit={(event) => {this.sendEmail(event)}}>\n                        <div className=\"inputs-container\">\n                            <input id=\"name\" name=\"name\" type=\"text\" ref={this.name} placeholder=\"NAME\"></input>\n                            <div className={!this.state.formError.name.hasError ? \"error-msg close\" : \"error-msg\"}>{this.state.formError.name.error}</div>\n                        </div>\n                        <div className=\"inputs-container\">\n                            <input id=\"email\" name=\"email\" type=\"text\" ref={this.email} placeholder=\"EMAIL\"></input>\n                            <div className={!this.state.formError.email.hasError ? \"error-msg close\" : \"error-msg\"}>{this.state.formError.email.error}</div>\n                        </div>\n                        <div className=\"textarea-container\">\n                            <textarea id=\"message\" name=\"message\" type=\"text\" ref={this.message} placeholder=\"SPEAK YOUR MIND...\"></textarea>\n                            <div className={!this.state.formError.message.hasError ? \"error-msg close\" : \"error-msg\"}>{this.state.formError.message.error}</div>\n                        </div>\n                        <div className=\"submit-container\">\n                            <input id=\"submit\" type=\"submit\" value=\"GO!\"></input>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Form;"],"mappings":"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"},"metadata":{},"sourceType":"module"}